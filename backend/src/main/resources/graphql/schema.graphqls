type UserHabit {
  id: ID!
  user: User!
  habit: Habit!
  records: [Record]
}

type Habit {
  id: ID!
  name: String!
  color: String!
  difficulty: Int!
  userHabits: [UserHabit]!
}

type User {
  id: ID!
  login: String!
  password: String!
  userHabit: [UserHabit]!
}

type Record {
  id: ID!
  userHabit: UserHabit!
  date: String!
}

type Query {
  userHabits(userId: ID!): [UserHabit]
  habits: [Habit]
  authToken(login: String!, password: String!): String
}

type Mutation {
  createUser(login: String!, password: String!): User
  createHabit(name: String!, color: String!, difficulty: Int!): Habit
  createUserHabit(userId: ID!, habitId: ID!): UserHabit
  createRecord(userHabitId: ID!, date: String!): Record
}
